plugins {
    id 'java'
    id 'com.github.ben-manes.versions' version '0.49.0'
    id 'jacoco'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.google.guava:guava:32.1.2-jre'
    implementation 'commons-cli:commons-cli:1.5.0'
    implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.15.2'
    implementation group: 'com.google.inject', name: 'guice', version: '7.0.0'
    testImplementation 'org.mockito:mockito-core:5.6.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'

    implementation group: 'org.slf4j', name: 'slf4j-log4j12', version: '2.0.9'

    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'

    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport // report is always generated after tests run
}

jacoco {
    toolVersion = "0.8.9"
    reportsDirectory = file("$buildDir/reports/jacoco")
}

jacocoTestReport { // ./gradlew test jacocoTestReport from CLI
    dependsOn test // tests are required to run before generating the report
    group = "Reporting"
    reports {
        html.destination file("${buildDir}/reports/coverage")
    }

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/hluz/Program.*',
                                        '**/hluz/AppModule.*',])
        }))
    }
}
